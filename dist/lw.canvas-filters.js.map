{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a4540245aa47dd0c591e","webpack:///./canvas-filters.js","webpack:///../~/floyd-steinberg/floyd-steinberg.js"],"names":["grayscaleAlgorithms","color","invertColor","data","i","value","brightness","undefined","contrast","gamma","Math","exp","log","grayscale","algorithm","shades","indexOf","Error","gray","r","g","b","max","min","parseInt","canvasFilters","canvas","settings","Object","assign","smoothing","shadesOfGray","dithering","context","getContext","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","imageData","getImageData","width","height","contrastFactor","brightnessOffset","gammaCorrection","shadesOfGrayFactor","il","length","putImageData"],"mappings":"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","file":"lw.canvas-filters.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CanvasFilter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasFilter\"] = factory();\n\telse\n\t\troot[\"CanvasFilter\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a4540245aa47dd0c591e","import FloydSteinberg from 'floyd-steinberg'\n\n// Grayscale algorithms\nconst grayscaleAlgorithms = [\n    'none',\n    'average',\n    'desaturation',\n    'decomposition-min', 'decomposition-max',\n    'luma', 'luma-601', 'luma-709', 'luma-240',\n    'red-chanel', 'green-chanel', 'blue-chanel'\n]\n\n// Trucate color value in the 0-255 range\nfunction color(color) {\n    return color < 0 ? 0 : (color > 255 ? 255 : color);\n}\n\n// Filters ...\nfunction invertColor(data, i, value) {\n    if (value) {\n        data[i]     = color(255 - data[i])\n        data[i + 1] = color(255 - data[i + 1])\n        data[i + 2] = color(255 - data[i + 2])\n    }\n}\n\nfunction brightness(data, i, value) {\n    if (value !== undefined) {\n        data[i]     = color(data[i]     + value)\n        data[i + 1] = color(data[i + 1] + value)\n        data[i + 2] = color(data[i + 2] + value)\n    }\n}\n\nfunction contrast(data, i, value) {\n    if (value !== undefined) {\n        data[i]     = color(value * (data[i]     - 128) + 128)\n        data[i + 1] = color(value * (data[i + 1] - 128) + 128)\n        data[i + 2] = color(value * (data[i + 2] - 128) + 128)\n    }\n}\n\nfunction gamma(data, i, value) {\n    if (value !== undefined) {\n        data[i]     = color(Math.exp(Math.log(255 * (data[i]     / 255)) * value))\n        data[i + 1] = color(Math.exp(Math.log(255 * (data[i + 1] / 255)) * value))\n        data[i + 2] = color(Math.exp(Math.log(255 * (data[i + 2] / 255)) * value))\n    }\n}\n\nfunction grayscale(data, i, algorithm, shades) {\n    // Graysale\n    // http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/\n\n    // Unsupported algorithm\n    if (grayscaleAlgorithms.indexOf(algorithm) === -1) {\n        throw new Error('Unsupported grayscale algorithm: ' + algorithm)\n    }\n\n    // None\n    if (algorithm === 'none') {\n        return null\n    }\n\n    // Get Red/Green/Blue values\n    let gray\n    let r = data[i];\n    let g = data[i + 1];\n    let b = data[i + 2];\n\n    switch (algorithm) {\n        case 'average':\n            gray = (r + g + b) / 3\n            break\n\n        case 'luma': // Default\n            gray = (r * 0.3) + (g * 0.59) + (b * 0.11)\n            break\n\n        case 'luma-601': // CCIR-601\n            gray = (r * 0.299) + (g * 0.587) + (b * 0.114)\n            break\n\n        case 'luma-709': // ITU-R-709\n            gray = (r * 0.2126) + (g * 0.7152) + (b * 0.0722)\n            break\n\n        case 'luma-240': // SMPTE-240M\n            gray = (r * 0.212) + (g * 0.701) + (b * 0.087)\n            break\n\n        case 'desaturation':\n            gray = (Math.max(r, g, b) + Math.min(r, g, b)) / 2\n            break\n\n        case 'decomposition-min':\n            gray = Math.min(r, g, b)\n            break\n\n        case 'decomposition-max':\n            gray = Math.max(r, g, b)\n            break\n\n        case 'red-chanel':\n            gray = r\n            break\n\n        case 'green-chanel':\n            gray = g\n            break\n\n        case 'blue-chanel':\n            gray = b\n            break\n    }\n\n    // Shades of gray\n    if (shades !== undefined) {\n        gray = parseInt(gray / shades) * shades\n    }\n\n    // Force integer\n    gray = parseInt(gray)\n\n    // Set new r/g/b values\n    data[i]     = color(gray)\n    data[i + 1] = color(gray)\n    data[i + 2] = color(gray)\n}\n\n// Apply filters on provided canvas\nfunction canvasFilters(canvas, settings) {\n    settings = Object.assign({}, {\n        smoothing   : false,  // Smoothing [true|fale]\n        brightness  : 0,      // Image brightness [-255 to +255]\n        contrast    : 0,      // Image contrast [-255 to +255]\n        gamma       : 0,      // Image gamma correction [0.01 to 7.99]\n        grayscale   : 'none', // Graysale algorithm [average, luma, luma-601, luma-709, luma-240, desaturation, decomposition-[min|max], [red|green|blue]-chanel]\n        shadesOfGray: 256,    // Number of shades of gray [2-256]\n        invertColor : false,   // Invert color...\n        dithering   : false\n    }, settings || {})\n\n    // Get canvas 2d context\n    let context = canvas.getContext('2d')\n\n    // Smoothing\n    if (context.imageSmoothingEnabled !== undefined) {\n        context.imageSmoothingEnabled = settings.smoothing\n    }\n    else {\n        context.mozImageSmoothingEnabled    = settings.smoothing\n        context.webkitImageSmoothingEnabled = settings.smoothing\n        context.msImageSmoothingEnabled     = settings.smoothing\n        context.oImageSmoothingEnabled      = settings.smoothing\n    }\n\n    // Get image data\n    let imageData = context.getImageData(0, 0, canvas.width, canvas.height)\n    let data      = imageData.data\n\n    let contrastFactor, brightnessOffset, gammaCorrection, shadesOfGrayFactor\n\n    if (settings.contrast !== 0) {\n        contrastFactor = (259 * (settings.contrast + 255)) / (255 * (259 - settings.contrast))\n    }\n\n    if (settings.brightness !== 0) {\n        brightnessOffset = settings.brightness\n    }\n\n    if (settings.gamma !== 0) {\n        gammaCorrection = 1 / settings.gamma\n    }\n\n    // Shades of gray\n    if (settings.shadesOfGray > 1 && settings.shadesOfGray < 256) {\n        shadesOfGrayFactor = 255 / (settings.shadesOfGray - 1)\n    }\n\n    // For each pixel\n    for (let i = 0, il = data.length; i < il; i += 4) {\n        // Apply filters\n        invertColor(data, i, settings.invertColor)\n        brightness(data, i, brightnessOffset)\n        contrast(data, i, contrastFactor)\n        gamma(data, i, gammaCorrection)\n        grayscale(data, i, settings.grayscale, shadesOfGrayFactor)\n    }\n\n    if (settings.dithering) {\n        imageData = FloydSteinberg(imageData)\n    }\n\n    // Write new image data on the context\n    context.putImageData(imageData, 0, 0)\n}\n\n// Exports\nexport { canvasFilters }\nexport default canvasFilters\n\n\n\n// WEBPACK FOOTER //\n// ./canvas-filters.js","/*\n * floyd-steinberg\n *\n * Using 2D error diffusion formula published by Robert Floyd and Louis Steinberg in 1976\n *\n * Javascript implementation of Floyd-Steinberg algorithm thanks to Forrest Oliphant @forresto and @meemoo \n * via iFramework https://github.com/meemoo/iframework/blob/master/src/nodes/image-monochrome-worker.js\n *\n * Accepts an object that complies with the HTML5 canvas imageData spec https://developer.mozilla.org/en-US/docs/Web/API/ImageData\n * In particular, it makes use of the width, height, and data properties\n *\n * License: MIT\n*/\n\nmodule.exports = floyd_steinberg;\n\nfunction floyd_steinberg(image) {\n  var imageData = image.data;\n  var imageDataLength = imageData.length;\n  var w = image.width;\n  var lumR = [],\n      lumG = [],\n      lumB = [];\n\n  var newPixel, err;\n\n  for (var i = 0; i < 256; i++) {\n    lumR[i] = i * 0.299;\n    lumG[i] = i * 0.587;\n    lumB[i] = i * 0.110;\n  }\n\n  // Greyscale luminance (sets r pixels to luminance of rgb)\n  for (var i = 0; i <= imageDataLength; i += 4) {\n    imageData[i] = Math.floor(lumR[imageData[i]] + lumG[imageData[i+1]] + lumB[imageData[i+2]]);\n  }\n\n  for (var currentPixel = 0; currentPixel <= imageDataLength; currentPixel += 4) {\n    // threshold for determining current pixel's conversion to a black or white pixel\n    newPixel = imageData[currentPixel] < 150 ? 0 : 255;\n    err = Math.floor((imageData[currentPixel] - newPixel) / 23);\n    imageData[currentPixel] = newPixel;\n    imageData[currentPixel + 4         ] += err * 7;\n    imageData[currentPixel + 4 * w - 4 ] += err * 3;\n    imageData[currentPixel + 4 * w     ] += err * 5;\n    imageData[currentPixel + 4 * w + 4 ] += err * 1;\n    // Set g and b pixels equal to r (effectively greyscales the image fully)\n    imageData[currentPixel + 1] = imageData[currentPixel + 2] = imageData[currentPixel];\n  }\n\n  return image;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/floyd-steinberg/floyd-steinberg.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}